#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –õ–ò–ü

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SERVER_HOST="username@your-server-ip"
SSH_KEY="~/.ssh/id_rsa"
DEPLOY_PATH="/home/username/lip-workshop"
LOG_DIR="$DEPLOY_PATH/logs"
DATE=$(date +"%Y-%m-%d_%H-%M-%S")
HEALTH_CHECK_URL="http://localhost:3000/health"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
echo_c() {
  echo -e "${2}${1}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
ssh_command() {
  ssh -i $SSH_KEY $SERVER_HOST "$1"
}

# –ù–∞—á–∞–ª–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
echo_c "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –õ–ò–ü..." "$YELLOW"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º..." "$YELLOW"
if ssh -i $SSH_KEY -q $SERVER_HOST exit; then
  echo_c "‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ." "$GREEN"
else
  echo_c "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è." "$RED"
  exit 1
fi
echo

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
ssh_command "mkdir -p $LOG_DIR"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker..." "$YELLOW"
DOCKER_STATUS=$(ssh_command "systemctl is-active docker")
if [[ "$DOCKER_STATUS" == "active" ]]; then
  echo_c "‚úÖ Docker –∞–∫—Ç–∏–≤–µ–Ω." "$GREEN"
else
  echo_c "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—ã—Ç–∞—é—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å..." "$RED"
  ssh_command "sudo systemctl start docker"
  sleep 3
  DOCKER_STATUS=$(ssh_command "systemctl is-active docker")
  if [[ "$DOCKER_STATUS" == "active" ]]; then
    echo_c "‚úÖ Docker —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω." "$GREEN"
  else
    echo_c "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Docker." "$RED"
    exit 1
  fi
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." "$YELLOW"
CONTAINER_STATUS=$(ssh_command "docker ps --format '{{.Names}}: {{.Status}}' | grep lip")
if [[ -z "$CONTAINER_STATUS" ]]; then
  echo_c "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –õ–ò–ü –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã. –ó–∞–ø—É—Å–∫–∞—é..." "$RED"
  ssh_command "cd $DEPLOY_PATH && docker-compose up -d"
  sleep 10
  CONTAINER_STATUS=$(ssh_command "docker ps --format '{{.Names}}: {{.Status}}' | grep lip")
  if [[ -z "$CONTAINER_STATUS" ]]; then
    echo_c "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã." "$RED"
    exit 1
  else
    echo_c "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã:" "$GREEN"
    echo "$CONTAINER_STATUS"
  fi
else
  echo_c "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã:" "$GREEN"
  echo "$CONTAINER_STATUS"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health-check endpoint'–∞
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." "$YELLOW"
HEALTH_CHECK=$(ssh_command "curl -s -o /dev/null -w '%{http_code}' $HEALTH_CHECK_URL")
if [[ "$HEALTH_CHECK" == "200" ]]; then
  echo_c "‚úÖ API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ (HTTP 200)." "$GREEN"
else
  echo_c "‚ùå API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É (HTTP $HEALTH_CHECK)." "$RED"
  echo_c "–ü—Ä–æ–≤–µ—Ä—è—é –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." "$YELLOW"
  ssh_command "docker logs --tail 50 lip-app"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Nginx
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Nginx..." "$YELLOW"
NGINX_STATUS=$(ssh_command "systemctl is-active nginx")
if [[ "$NGINX_STATUS" == "active" ]]; then
  echo_c "‚úÖ Nginx –∞–∫—Ç–∏–≤–µ–Ω." "$GREEN"
else
  echo_c "‚ùå Nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—ã—Ç–∞—é—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å..." "$RED"
  ssh_command "sudo systemctl start nginx"
  sleep 2
  NGINX_STATUS=$(ssh_command "systemctl is-active nginx")
  if [[ "$NGINX_STATUS" == "active" ]]; then
    echo_c "‚úÖ Nginx —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω." "$GREEN"
  else
    echo_c "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Nginx." "$RED"
    exit 1
  fi
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
echo_c "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:" "$BLUE"
ssh_command "echo 'CPU –∏ –ø–∞–º—è—Ç—å:'; docker stats --no-stream | grep lip; echo; echo '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:'; df -h | grep -E '/$|/home'"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫..." "$YELLOW"
ERROR_COUNT=$(ssh_command "docker logs --since 24h lip-app 2>&1 | grep -i -E 'error|exception|fatal' | wc -l")
if [[ "$ERROR_COUNT" -gt 0 ]]; then
  echo_c "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $ERROR_COUNT –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞." "$RED"
  echo_c "–ü–æ–∫–∞–∑—ã–≤–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –æ—à–∏–±–æ–∫:" "$RED"
  ssh_command "docker logs --since 24h lip-app 2>&1 | grep -i -E 'error|exception|fatal' | tail -10"
else
  echo_c "‚úÖ –û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ." "$GREEN"
fi
echo

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ
echo_c "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ..." "$YELLOW"
ssh_command "echo '--- –û—Ç—á–µ—Ç –æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ –õ–ò–ü ($DATE) ---' > $LOG_DIR/monitoring_$DATE.log"
ssh_command "echo '–°—Ç–∞—Ç—É—Å Docker: $DOCKER_STATUS' >> $LOG_DIR/monitoring_$DATE.log"
ssh_command "echo '–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: ' >> $LOG_DIR/monitoring_$DATE.log"
ssh_command "docker ps --format '{{.Names}}: {{.Status}}' | grep lip >> $LOG_DIR/monitoring_$DATE.log"
ssh_command "echo '–°—Ç–∞—Ç—É—Å API: $HEALTH_CHECK' >> $LOG_DIR/monitoring_$DATE.log"
ssh_command "echo '–°—Ç–∞—Ç—É—Å Nginx: $NGINX_STATUS' >> $LOG_DIR/monitoring_$DATE.log"
ssh_command "echo '–û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö: $ERROR_COUNT' >> $LOG_DIR/monitoring_$DATE.log"
ssh_command "echo '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:' >> $LOG_DIR/monitoring_$DATE.log"
ssh_command "docker stats --no-stream | grep lip >> $LOG_DIR/monitoring_$DATE.log"
ssh_command "df -h | grep -E '/$|/home' >> $LOG_DIR/monitoring_$DATE.log"
echo_c "‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ $LOG_DIR/monitoring_$DATE.log" "$GREEN"
echo

echo_c "üéâ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!" "$GREEN"
echo_c "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏." "$GREEN" 