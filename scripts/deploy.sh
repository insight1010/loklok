#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è –õ–ò–ü –Ω–∞ —Å–µ—Ä–≤–µ—Ä

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SERVER_HOST="root@2a03:6f00:a::9409"
SSH_KEY="~/.ssh/id_rsa"
DEPLOY_PATH="/root/lip-workshop"
REPOSITORY="https://github.com/yourusername/lip-workshop.git"

# –ü–∞—Ä–æ–ª—å –¥–ª—è root
ROOT_PASSWORD="yfu4MemdN+o-6M"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
echo_c() {
  echo -e "${2}${1}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
ssh_command() {
  ssh -i $SSH_KEY $SERVER_HOST "$1"
}

# –ù–∞—á–∞–ª–æ –¥–µ–ø–ª–æ—è
echo_c "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –õ–ò–ü –Ω–∞ —Å–µ—Ä–≤–µ—Ä $SERVER_HOST..." "$YELLOW"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º..." "$YELLOW"
if ssh -i $SSH_KEY -q $SERVER_HOST exit; then
  echo_c "‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ." "$GREEN"
else
  echo_c "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è." "$RED"
  exit 1
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Git –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Git –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..." "$YELLOW"
if ssh_command "which git" > /dev/null; then
  echo_c "‚úÖ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ." "$GREEN"
else
  echo_c "‚ùå Git –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git..." "$RED"
  ssh_command "sudo apt-get update && sudo apt-get install -y git"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker –∏ Docker Compose
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..." "$YELLOW"
if ssh_command "which docker" > /dev/null; then
  echo_c "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ." "$GREEN"
else
  echo_c "‚ùå Docker –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..." "$RED"
  ssh_command "sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && \
    sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable\" && \
    sudo apt-get update && sudo apt-get install -y docker-ce && \
    sudo usermod -aG docker \$USER"
fi
echo

echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker Compose –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..." "$YELLOW"
if ssh_command "which docker-compose" > /dev/null; then
  echo_c "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ." "$GREEN"
else
  echo_c "‚ùå Docker Compose –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..." "$RED"
  ssh_command "sudo curl -L \"https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-\$(uname -s)-\$(uname -m)\" -o /usr/local/bin/docker-compose && \
    sudo chmod +x /usr/local/bin/docker-compose"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..." "$YELLOW"
if ssh_command "test -d $DEPLOY_PATH && echo exists" | grep -q "exists"; then
  echo_c "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." "$GREEN"
  ssh_command "cd $DEPLOY_PATH && git pull"
else
  echo_c "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." "$YELLOW"
  ssh_command "git clone $REPOSITORY $DEPLOY_PATH"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ .env
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ .env..." "$YELLOW"
if ssh_command "test -f $DEPLOY_PATH/.env && echo exists" | grep -q "exists"; then
  echo_c "‚úÖ –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç." "$GREEN"
else
  echo_c "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env..." "$YELLOW"
  echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞:"
  read -r bot_token
  echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è JWT (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ):"
  read -r jwt_secret
  
  if [ -z "$jwt_secret" ]; then
    jwt_secret=$(openssl rand -hex 32)
    echo_c "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π JWT —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á." "$GREEN"
  fi
  
  ssh_command "echo \"TELEGRAM_BOT_TOKEN=$bot_token\" > $DEPLOY_PATH/.env && \
    echo \"JWT_SECRET=$jwt_secret\" >> $DEPLOY_PATH/.env"
  echo_c "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω." "$GREEN"
fi
echo

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo_c "–ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." "$YELLOW"
ssh_command "cd $DEPLOY_PATH && docker-compose down && docker-compose up -d --build"
echo_c "‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã." "$GREEN"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo_c "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:" "$YELLOW"
ssh_command "docker ps | grep lip"
echo

echo_c "üéâ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!" "$GREEN"
echo_c "–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –õ–ò–ü –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É http://<server-ip>:3000" "$GREEN"
echo_c "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Nginx –∏ SSL –¥–ª—è –≤–∞—à–µ–≥–æ –¥–æ–º–µ–Ω–∞." "$YELLOW" 